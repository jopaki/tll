<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.tll</groupId>
    <artifactId>tll</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>smbiz-admin</artifactId>
  <packaging>war</packaging>
  <name>Smbiz Admin webapp</name>
  <description>Redux of smbiz-web but using gwt 2.1+ features.</description>
  <inceptionYear>2011</inceptionYear>

  <properties>
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
  </properties>

  <build>
    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <!-- don't copy any config prop files as they are managed independently. -->
          <exclude>config*.properties</exclude>
        </excludes>
      </resource>
    </resources>

    <plugins>

      <!-- AspectJ bind @Transactional to Spring's trans handling framework -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>aspectj-maven-plugin</artifactId>
        <configuration>
          <showWeaveInfo>false</showWeaveInfo>
          <source>1.6</source>
          <target>1.6</target>
          <complianceLevel>1.6</complianceLevel>
          <aspectLibraries>
            <aspectLibrary>
              <groupId>org.springframework</groupId>
              <artifactId>spring-aspects</artifactId>
            </aspectLibrary>
          </aspectLibraries>
        </configuration>
        <executions>
          <execution>
            <id>aj compile smbiz</id>
            <goals>
              <goal>compile</goal>
              <goal>test-compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Mark the project for Google Plugin for Eclipse (GPE) -->
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <downloadSources>true</downloadSources>
          <downloadJavadocs>false</downloadJavadocs>
          <wtpversion>2.0</wtpversion>
          <additionalBuildcommands>
            <buildCommand>
              <name>com.google.gwt.eclipse.core.gwtProjectValidator</name>
            </buildCommand>
          </additionalBuildcommands>
          <additionalProjectnatures>
            <projectnature>com.google.gwt.eclipse.core.gwtNature</projectnature>
          </additionalProjectnatures>
        </configuration>
      </plugin>

      <!-- GWT Maven Plugin -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
        <configuration>
          <runTarget>SmbizAdmin.html</runTarget>
          <hostedWebapp>${webappDirectory}</hostedWebapp>
        </configuration>
        <executions>
          <execution>
            <id>gwt-i18n</id>
            <goals>
              <goal>i18n</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <i18nMessagesBundle>com.tll.client.Messages</i18nMessagesBundle>
            </configuration>
          </execution>
          <execution>
            <id>gwt-resources</id>
            <goals>
              <goal>resources</goal>
            </goals>
            <phase>process-resources</phase>
            <configuration>
            </configuration>
          </execution>
          <execution>
            <id>gwt-compile</id>
            <goals>
              <goal>compile</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <module>${gwtTargetModule}</module>
              <style>${gwtCompileStyle}</style>
            </configuration>
          </execution>
          <execution>
            <id>gwt-test</id>
            <goals>
              <goal>test</goal>
            </goals>
            <phase>integration-test</phase>
            <configuration>
              <!-- TODO finish -->
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-gwt-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <!-- Necessary to add i18n Messages.class that is auto-generated by gwt-maven-plugin -->
                <source>${project.build.directory}/generated-sources/gwt</source>
                <!-- 
                  Google Plugin for Eclipse (GPE) won't see the source generated above by requestfactory-apt 
                  unless it is exposed as an additional source dir 
                -->
<!--                 <source>${project.build.directory}/generated-sources/apt</source> -->
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Copy static web files before executing gwt:run -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${webappDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/webapp</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- gmaven plugin -->
      <plugin>
        <groupId>org.codehaus.gmaven</groupId>
        <artifactId>gmaven-plugin</artifactId>
        <executions>
          <execution>
            <id>war-resources</id>
            <goals>
              <goal>execute</goal>
            </goals>
            <!-- just after compile since the .class files need to be present for db4o db stubbing -->
            <phase>process-classes</phase>
            <configuration>
              <classpath>
                <element>
                  <groupId>com.tll</groupId>
                  <artifactId>tll-dao-db4o</artifactId>
                  <version>0.0.1-SNAPSHOT</version>
                  <classifier>testassets</classifier>
                </element>
              </classpath>
              <scriptpath>
                <element>${project.basedir}/../config/src/main/scripts</element>
                <element>${project.basedir}/src/main/scripts</element>
              </scriptpath>
              <source><![CDATA[com.tll.BuildTools.processWarResources(project, ant);]]></source>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
    
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>gwt-maven-plugin</artifactId>
                    <versionRange>[2.4.0,)</versionRange>
                    <goals>
                      <goal>i18n</goal>
                      <goal>resources</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <execute />
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>aspectj-maven-plugin</artifactId>
                    <versionRange>[1.4,)</versionRange>
                    <goals>
                      <goal>test-compile</goal>
                      <goal>compile</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <!-- TODO: make this execute! -->
                    <ignore></ignore>
                  </action>
                </pluginExecution>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <versionRange>[1.0,)</versionRange>
                    <goals>
                      <goal>execute</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore />
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>

    <!-- stage profiles -->
    <!-- dev profile -->
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <debug>true</debug>
        <stage>dev</stage>
        <gwtCompileStyle>PRETTY</gwtCompileStyle>
        <gwtTargetModule>com.tll.SmbizAdminDev</gwtTargetModule>
      </properties>
    </profile>
    <!-- prod (production) profile -->
    <profile>
      <id>prod</id>
      <properties>
        <debug>false</debug>
        <stage>prod</stage>
        <gwtCompileStyle>OBF</gwtCompileStyle>
        <gwtTargetModule>com.tll.SmbizAdmin</gwtTargetModule>
      </properties>
      <build>
        <plugins>
        </plugins>
      </build>
    </profile>

    <!-- security impl profiles -->
    <profile>
      <id>security</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <properties>
        <securityImpl>acegi</securityImpl>
      </properties>
    </profile>
    <profile>
      <id>nosecurity</id>
      <properties>
        <securityImpl>none</securityImpl>
      </properties>
    </profile>

  </profiles>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>aopalliance</groupId>
      <artifactId>aopalliance</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjrt</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-core</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-servlet</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.velocity</groupId>
      <artifactId>velocity</artifactId>
    </dependency>

    <!-- we need gwt-servlet for RPC -->
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-user</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- RequestFactory server -->
    <dependency>
      <groupId>com.google.web.bindery</groupId>
      <artifactId>requestfactory-server</artifactId>
      <version>${gwtVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.web.bindery</groupId>
      <artifactId>requestfactory-apt</artifactId>
      <version>${gwtVersion}</version>
    </dependency>

    <!-- RequestFactory will use JSR 303 javax.validation if you let it -->
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <classifier>sources</classifier>
      <version>1.0.0.GA</version><!--$NO-MVN-MAN-VER$ -->
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <exclusions>
        <exclusion>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-config</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-core</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-mail</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-schema</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-model</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-api</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-db4o</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-service</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-servlet</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-client-core</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-client-rpc</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-client-listing</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>

    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-core</artifactId>
      <classifier>testassets</classifier>
      <version>0.0.1-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-api</artifactId>
      <classifier>testassets</classifier>
      <version>0.0.1-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-dao-db4o</artifactId>
      <classifier>testassets</classifier>
      <version>0.0.1-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tll</groupId>
      <artifactId>tll-service</artifactId>
      <classifier>testassets</classifier>
      <version>0.0.1-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>db4o</groupId>
      <artifactId>db4o</artifactId>
      <version>8.0.249.16098-all-java5</version>
    </dependency>

    <dependency>
      <groupId>net.sf.ehcache</groupId>
      <artifactId>ehcache-core</artifactId>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-tx</artifactId>
    </dependency>

  </dependencies>

</project>
